{"version":3,"sources":["components/Header/Header.jsx","store.js","components/Main/Board/List.jsx","components/Main/Board/Pagebar.jsx","components/Main/Board/Board.jsx","components/Main/Containers/Board.jsx","components/Main/Write/Write.jsx","components/Main/Read/Intro.jsx","components/Main/Read/Read.jsx","components/Footer/Footer.jsx","components/Modal/Edit.jsx","components/Modal/Delete.jsx","components/Main/Edit/Edit.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","exact","to","createStore","state","action","undefined","currentPage","modalIsOpen","editOrDelete","selectedList","lastId","intro","id","path","title","writer","date","subTitle","imgSrc","list","write","password","type","_list","concat","splice","i","length","window","__REDUX_DEVTOOLS_EXTENSION__","List","props","onClick","store","dispatch","Pagebar","getState","subscribe","this","setState","bind","btnNums","btns","push","_btns","map","number","index","key","e","Component","Board","lists","listComponents","slice","src","alt","connect","Write","year","Date","getFullYear","month","getMonth","getDate","submitClick","preventDefault","target","value","history","onSubmit","placeholder","name","autoFocus","required","readOnly","withRouter","Intro","introTitle","introWriter","introDate","introSubTitle","introImgSrc","Read","content","Footer","href","Edit","useState","pwd","useHistory","document","getElementById","querySelector","style","visibility","Delete","EditPage","setTitle","setSubTitle","setWriter","setWrite","setPwd","onChange","Modal","setAppElement","App","contents","modalComp","component","isOpen","top","left","right","bottom","border","borderRadius","Boolean","location","hostname","match","ReactDOM","render","basename","process","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7fa61784.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nimport './Header.css';\nfunction Header(){\n    return(\n        <div className=\"header\">\n            <div className=\"headerName\">\n                SIMPLE BOARD\n            </div>\n            <div className=\"headerNav\">\n                <NavLink exact to='/' className=\"nav\">MAIN</NavLink>\n                <NavLink exact to='/write' className=\"nav\">WRITE</NavLink>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;","import {createStore} from 'redux';\n\nexport default createStore(function(state, action){\n    if(state===undefined){\n        return {\n            currentPage: 1,\n            modalIsOpen:false,\n            editOrDelete: \"EDIT\",\n            selectedList:0, \n            lastId : 0,\n            intro :{\n                id : 0,\n                path: \"/intro\",\n                title : \"INTRO\",\n                writer : \"yshjft\",\n                date : \"2020.8.17 ~ 2020.8.31\",\n                subTitle : \"SIMPLE BOARD에 대한 간다한 설명입니다.\",\n                imgSrc : \"/images/intro.png\",\n            },\n            list : [\n                {\n                    id : 0,\n                    path: \"/0\",\n                    title : \"FIRST EXAMPLE\",\n                    writer : \"yshjft\",\n                    date : \"2020.8.20\",\n                    subTitle : \"첫번째 예시입니다.\",\n                    write : \"SIMPLE BOARD의 WRITE를 통하여 원하는 내용을 입력한 경우 첫번째 예시와 같이 내용이 나타납니다.\",\n                    password : \"111111\"\n                },\n            ]\n        }\n    } else if(action.type === \"EDIT_LASTID\"){\n        return {...state, lastId : action.lastId}\n    }else if(action.type === \"WRITE\"){\n        let originalList=state.list;\n        let _list=originalList.concat({\n            id : action.id,\n            path : \"/\"+action.id,\n            title : action.title,\n            writer: action.writer,\n            date : action.date,\n            subTitle : action.subTitle,\n            write : action.write,\n            password : action.password,\n        });\n\n        return {...state, list : _list};\n    }else if(action.type === \"SELECTED_LIST\"){\n        return {...state, selectedList : action.selectedList}\n    }else if(action.type === \"MODAL_IS_OPEN\"){\n        return {...state, modalIsOpen : action.modalIsOpen}\n    }else if (action.type === \"MODAL_TYPE\"){\n        return {...state, editOrDelete : action.editOrDelete}\n    }else if(action.type === \"EDIT\"){\n        let originalList=state.list;\n        let _list=originalList.concat();\n        _list[action.id]={\n            id: action.id,\n            path : \"/\"+action.id,\n            title : action.title,\n            writer: action.writer,\n            date : action.date,\n            subTitle : action.subTitle,\n            write : action.write,\n            password : action.password,\n        }\n\n        return {...state, list: _list};\n    }else if(action.type === \"DELETE\"){\n        let originalList=state.list;\n        let _list=originalList.concat();\n        _list.splice(action.selectedList, 1);\n\n        for(let i=0; i<_list.length; i++){\n            _list[i].id=i;\n        }\n\n        return {...state, lastId: action.lastId, list : _list};\n    }else if(action.type === \"CURRENT_PAGE\"){\n        return {...state, currentPage : action.currentPage};\n    }\n}, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport store from '../../../store';\n\nimport \"./List.css\";\n\nfunction List(props){\n    return(\n        <NavLink exact to={props.list.path} className=\"link\" onClick={function(){\n            store.dispatch({type : \"SELECTED_LIST\", selectedList : props.list.id})\n        }}>\n            <div className=\"list\">\n                <div className=\"listTitle\">{props.list.title}</div>\n                <div className=\"listInfo\">\n                    <div className=\"listWriter\">{props.list.writer}</div>\n                    <div className=\"listDate\">{props.list.date}</div>\n                </div>\n                <div className=\"listSubtitle\">{props.list.subTitle}</div>            \n            </div>\n        </NavLink>\n        \n       \n    )\n}\n\nexport default List","import React, {Component} from 'react';\nimport store from  '../../../store';\nimport './Pagebar.css';\n\nclass Pagebar extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            length : store.getState().list.length,\n            currentPage : 1,\n        }\n        store.subscribe(function(){\n            this.setState({length : store.getState().list.length});\n            this.setState({currentPage : store.getState().currentPage});\n        }.bind(this));\n    }\n    render(){\n        let btnNums=this.state.length/4;\n        let btns=[];\n        for(let i=0; i<btnNums; i++){\n            btns.push(i+1);\n        }\n\n        let _btns=btns.map((number, index)=>{\n\n            if(this.state.currentPage === number){\n               return <button key={index} className=\"selected\" onClick={function(e){\n                    store.dispatch({type : \"CURRENT_PAGE\", currentPage : number});\n                }}>{number}</button>\n            }else{\n                return <button key={index} className=\"pageBtn\" onClick={function(e){\n                    store.dispatch({type : \"CURRENT_PAGE\", currentPage : number});\n                }}>{number}</button>\n            }\n        });\n\n        return(\n            <div className=\"pageBtns\">\n                {_btns}\n            </div>\n        );\n    }\n}\n\n\nexport default Pagebar;","import React, {Component} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport List from \"./List\";\nimport Pagebar from \"./Pagebar\";\nimport store from \"../../../store\";\n\nimport './Board.css';\n\nclass Board extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            intro : this.props.intro,\n            list : this.props.list,\n            currentPage : 1,\n        }\n        store.subscribe(function(){\n            this.setState({currentPage : store.getState().currentPage});\n        }.bind(this));\n    }\n    render(){\n        let lists=this.state.list;\n        let index = this.state.currentPage -1;\n        let selectedLists=lists.slice(index*4, 4*(index+1));\n\n        let listComponents=selectedLists.map((list, index)=>(\n            <List key={index} list={list}></List>\n        ));\n\n\n        return(\n            <div className=\"Main\">\n                <NavLink exact to={this.state.intro.path} className=\"link\">\n                    <div className=\"intro\">\n                        <div className=\"introTitle\">{this.state.intro.title}</div>\n                        <div className=\"introInfo\">\n                            <div className=\"introWriter\">{this.state.intro.writer}</div>\n                            <div className=\"introDate\">{this.state.intro.date}</div>\n                        </div>\n                        <div className=\"introSubtitle\">{this.state.intro.subTitle}</div>\n                        <img src={this.state.intro.imgSrc} alt=\"LOAD FAIL\" className=\"introImg\"></img>\n                    </div>\n                </NavLink>\n                {listComponents}\n               <Pagebar></Pagebar>\n            </div>\n        );\n    }\n}\n\nexport default Board;","import Board from \"../Board/Board\";\nimport {connect} from \"react-redux\";\n\nfunction mapReduxStateToReactProps(state){\n    return{\n        intro : state.intro,\n        list : state.list\n    }\n}\n\nexport default connect(mapReduxStateToReactProps)(Board);","import React, {Component} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport store from \"../../../store\";\nimport \"./Write.css\";\n\nclass Write extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            year : new Date().getFullYear(),\n            month : new Date().getMonth()+1,\n            date : new Date().getDate(),\n        };\n        this.submitClick=this.submitClick.bind(this);\n    }\n    submitClick(e){\n        e.preventDefault();\n        store.dispatch({\n            type : \"EDIT_LASTID\",\n            lastId : store.getState().lastId+1,\n        });\n\n        store.dispatch({\n            type: \"WRITE\",\n            id : store.getState().lastId,\n            title : e.target.title.value,\n            writer : e.target.writer.value,\n            date : e.target.date.value,\n            subTitle : e.target.subTitle.value,\n            write : e.target.write.value,\n            password : e.target.password.value,\n        });\n        this.props.history.push('/'); //redirection\n    }\n    render(){\n        return(\n            <div className=\"Main\">\n                <form id=\"writeForm\" className=\"writeForm\" onSubmit={this.submitClick}>\n                    <div className=\"form\">\n                        <input type=\"txt\" placeholder=\"Title\" className=\"input title\" name=\"title\" autoFocus required></input>\n                    </div>\n                    <div className=\"form\">\n                        <input type=\"txt\" placeholder=\"Subtitle\" className=\"input subTitle\" name=\"subTitle\" required></input>\n                    </div>\n                    <div className=\"form\">\n                        <input type=\"txt\" placeholder=\"Writer\" className=\"input writer\" name=\"writer\" required></input>\n                    </div>\n                    <div className=\"form\">\n                        <input value={this.state.year+\".\"+this.state.month+\".\"+this.state.date} className=\"input date\" name=\"date\" readOnly></input>\n                    </div>\n                    <div className=\"form\">\n                        <textarea placeholder=\"write something\" className=\"write\" name=\"write\" required></textarea>\n                    </div>\n                    <div className=\"form\">\n                        <input type=\"password\" placeholder=\"password for Edit or Delete\"className=\"input password\" name=\"password\" required></input>\n                    </div>\n                    <div className=\"form\">\n                        <input type=\"submit\" value=\"SUBMIT\" className=\"submitBtn\"></input>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Write); //withRouter","import React, {Component} from 'react';\nimport store from \"../../../store\";\nimport \"./Read.css\";\n\nclass Intro extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            introTitle : store.getState().intro.title,\n            introWriter : store.getState().intro.writer,\n            introDate : store.getState().intro.date,\n            introSubTitle : store.getState().intro.subTitle,\n            introImgSrc : store.getState().intro.imgSrc,\n        }\n    }\n    render(){\n        return(\n            <div className=\"Main\">\n                <div className=\"readTitle\">{this.state.introTitle}</div>\n                <div className=\"readInfo\">\n                    <div className=\"readWriter\">{this.state.introWriter}</div>\n                    <div className=\"readDate\">{this.state.introDate}</div>\n                </div>\n                <div className=\"readSubTitle\">{this.state.introSubTitle}</div>\n                <img src={this.state.introImgSrc} alt=\"NO IMG\" className=\"readImg\"></img>\n                <div className=\"readContent\">\n                    <div className=\"topic\">SIMPLE BOARD란?</div>\n                    <br/>\n                    React와 관련하여 지금까지 배운 것들을 이용해 게시판 비슷한 것을 만들어보는 복습형 프로젝트입니다.\n                    이 프로젝트는 프론트엔드 부분만 다룹니다. 지금까지 배운 React, React router, Redux를 이용하였습니다.\n                    INTRO에서는 SIMPLE BOARD가 가진 기능과 아쉬운 점을 간단히 정리할 것입니다.\n                    <br/>\n                    <br/>\n                    <br/>\n                    <div className=\"topic\">MAIN PAGE & READ</div>\n                    <br/>\n                    <div className=\"gifArea\">\n                        <img src=\"/images/main_page.gif\" alt=\"NO IMG\" className=\"readGif\"></img>\n                    </div>\n                    <br/>\n                    SIMPLE BOARD의 MAIN PAGE입니다. 작성된 글들의 목록을 볼 수 있습니다.\n                    <br/>\n                    <br/>\n                    <br/>\n                    <div className=\"topic\">WRITE</div>\n                    <br/>\n                    <div className=\"gifArea\">\n                        <img src=\"/images/write.gif\" alt=\"NO IMG\" className=\"readGif\"></img>\n                    </div>\n                    <br/>\n                    글을 작성하는 부분입니다. 이후 수정이나 삭제를 위해 password를 작성하도록 하였습니다.\n                    <br/>\n                    <br/>\n                    <br/>\n                    <div className=\"topic\">UPDATE</div>\n                    <br/>\n                    <div className=\"gifArea\">\n                        <img src=\"/images/update.gif\" alt=\"NO IMG\" className=\"readGif\"></img>\n                    </div>\n                    <br/>\n                    작성한 글을 수정하는 부분입니다. 뛰어진 모달을 통해 password를 입력하고 내용을 수정합니다.\n                    <br/>\n                    <br/>\n                    <br/>\n                    <div className=\"topic\">DELETE</div>\n                    <br/>\n                    <div className=\"gifArea\">\n                        <img src=\"/images/delete.gif\" alt=\"NO IMG\" className=\"readGif\"></img>\n                    </div>\n                    <br/>\n                    작성한 글을 삭제하는 부분입니다. 뛰어진 모달을 통해 password를 입력하고 내용을 수정합니다.\n                    <br/>\n                    <br/>\n                    <br/>\n                    <div className=\"topic\">PAGINATION</div>\n                    <br/>\n                    <div className=\"gifArea\">\n                        <img src=\"/images/pagination.gif\" alt=\"NO IMG\" className=\"readGif\"></img>\n                    </div>\n                    <br/>\n                    글을 목록이 너무 많을 경우를 위해 pagination 기능을 제공합니다.\n                    <br/>\n                    <br/>\n                    <br/>\n                    <div className=\"topic\">아쉬운 점</div>\n                    <br/>\n                    함수형 컴포넌트를 제대로 사용하지 못햇다는 점이 아쉬웠다. 특히 아직까지로 hook에 대한 이해도가 낮아 공부가 더 필요할 것 같다. pagination이나 글 작성, 글 수정 등에 redux를 사용하여 새로고침할 경우 값이 유지 되지 않는다는 것이 조금 안타깝다.\n                    또한 password를 필요로 하는 글 수정페이지를 password 없이 접근하는 것을 막지 못했다는 것 또한 아쉽다. 마지막으로 가장 아쉬운 점은 시간이 너무 많이 걸렸다는 것이다. 프로젝트 중간에 개인적인 일이 있긴했지만 목표 시간인 일주일을 훨씬 넘겼다는 점이\n                    많이 아쉽다.\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Intro;","import React from 'react';\nimport store from '../../../store';\nimport \"./Read.css\";\n\nfunction Read(props){\n    return(\n        <div className=\"Main\">\n            <div className=\"readTitle\">{props.content.title}</div>\n            <div className=\"readInfo\">\n                <div className=\"readWriter\">{props.content.writer}</div>\n                <div className=\"readDate\">{props.content.date}</div>\n            </div>\n            <div className=\"readSubTitle\">{props.content.subTitle}</div>\n            <div className=\"readContent\">\n                {props.content.write}\n            </div>\n            <div className=\"readBtns\">\n                <button className=\"readBtn\" onClick={function(){\n                    store.dispatch({\n                        type : \"MODAL_IS_OPEN\",\n                        modalIsOpen : true,\n                    });\n                    store.dispatch({\n                        type : \"MODAL_TYPE\",\n                        editOrDelete : \"EDIT\"\n                    })\n                }}>EDIT</button>\n                <button className=\"readBtn\" onClick={function(){\n                    store.dispatch({\n                        type : \"MODAL_IS_OPEN\",\n                        modalIsOpen : true,\n                    });\n                    store.dispatch({\n                        type : \"MODAL_TYPE\",\n                        editOrDelete : \"DELETE\"\n                    })\n                }}>DELETE</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Read;","import React from 'react';\nimport \"./Footer.css\"\n\nfunction Footer(){\n    return(\n        <div className=\"Footer\">\n            <div className=\"footerName\">SIMPLE BOARD</div>\n            <a href=\"https://github.com/yshjft\" className=\"gitHubLink\">yshjft's github</a>\n            <div className=\"email\">jericoh@naver.com</div>\n        </div>\n    )\n}\n\nexport default Footer;","import React, {useState} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport store from '../../store';\nimport './modal.css';\n\nfunction Edit(){\n    let [pwd]=useState(store.getState().list[store.getState().selectedList].password);\n    let history = useHistory();\n    return(\n        <div>\n            <div className=\"closeBtnArea\" >\n                <button className=\"closeBtn\" onClick={function(){\n                    store.dispatch({\n                        type : \"MODAL_IS_OPEN\",\n                        modalIsOpen : false,\n                    })\n                }}>X</button>\n            </div>\n            <div className=\"modalMain\">\n                <div className=\"modalInfo\">ENTER PASSWORD</div>\n                <input type=\"password\" id=\"modalPwd\" className=\"modalPwd\"></input>\n                <div className=\"wrongPwd\">WRONG PASSWORD</div>\n            </div>\n            <div className=\"btnArea\">\n                <button className=\"btn\" onClick={function(){\n                    let _pwd=document.getElementById(\"modalPwd\").value;\n                    if(_pwd === pwd){\n                        document.getElementById(\"modalPwd\").value=null;\n                        document.querySelector(\".wrongPwd\").style.visibility='hidden';\n                        store.dispatch({\n                            type : \"MODAL_IS_OPEN\",\n                            modalIsOpen : false,\n                        });\n                        history.push('/edit');\n                    }else{\n                        document.getElementById(\"modalPwd\").value=null;\n                        document.querySelector(\".wrongPwd\").style.visibility='visible';\n                    }\n                }}>SUBMIT</button>\n            </div>\n        </div>\n    );\n\n}\n\nexport default Edit;","import React , {useState}from 'react';\nimport {useHistory} from 'react-router-dom';\nimport store from '../../store';\nimport './modal.css'\n\nfunction Delete(){\n    let [lastId]=useState(store.getState().lastId);\n    let [selectedList]=useState(store.getState().selectedList);\n    // let [pwd]=useState(store.getState().list[store.getState().selectedList].password);\n    let history=useHistory();\n    return(\n        <div>\n            <div className=\"closeBtnArea\" >``\n                <button className=\"closeBtn\" onClick={function(){\n                    store.dispatch({\n                        type : \"MODAL_IS_OPEN\",\n                        modalIsOpen : false,\n                    })\n                }}>X</button>\n            </div>\n            <div className=\"modalMain\">\n                <div className=\"modalInfo\">REALLY?</div>\n                <div className=\"modalInfo\">ENTER PASSWORD</div>\n                <input type=\"password\" id=\"modalPwd\" className=\"modalPwd\"></input>\n                <div className=\"wrongPwd\">WRONG PASSWORD</div>\n            </div> \n            <div className=\"btnArea\">\n                <button className=\"btn\" onClick={function(){\n                    // pwd를 state에 저장하지 않는 이유\n                    /*\n                    delete 실행 이후 redux의 editOrDelete 값은 DELETE로 유지된다.\n                    문제는 모달 컴포넌트를 렌더링할 때 조건문에 의해서 DELETE 컴포넌트가 렌더링되는데 이 때 selectedList로 인하여 문제가 발생한다.\n                    */\n                    let pwd=store.getState().list[store.getState().selectedList].password\n                    let _pwd=document.getElementById(\"modalPwd\").value;\n                    if(_pwd === pwd){\n                        document.getElementById(\"modalPwd\").value=null;\n                        document.querySelector(\".wrongPwd\").style.visibility='hidden';\n                        store.dispatch({\n                            type : \"MODAL_IS_OPEN\",\n                            modalIsOpen : false,\n                        });\n                        store.dispatch({\n                            type: \"DELETE\",\n                            lastId : lastId-1,\n                            selectedList : selectedList,\n                        })\n                        history.push('/');\n                    }else{\n                        document.getElementById(\"modalPwd\").value=null;\n                        document.querySelector(\".wrongPwd\").style.visibility='visible';\n                    }\n                }}>CONFIRM</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Delete;","import React, {useState}  from 'react';\nimport {useHistory} from 'react-router-dom';\nimport store from '../../../store';\n\nfunction EditPage(props){ // 컴포넌트는 무조건 대문자로 작성\n    let history=useHistory();\n    let [title, setTitle]=useState(props.content.title);\n    let [subTitle, setSubTitle]=useState(props.content.subTitle);\n    let [writer, setWriter]=useState(props.content.writer);\n    let [year]=useState(new Date().getFullYear());\n    let [month]=useState(new Date().getMonth()+1);\n    let [date]=useState(new Date().getDate());\n    let [write, setWrite]=useState(props.content.write);\n    let [pwd, setPwd]=useState(props.content.password);\n\n    return(\n        <div className=\"Main\">\n            <form id=\"writeForm\" className=\"writeForm\" onSubmit={function(e){\n                e.preventDefault();\n                store.dispatch({\n                    type: \"EDIT\",\n                    id : props.id,\n                    title : e.target.title.value,\n                    writer : e.target.writer.value,\n                    date : e.target.date.value,\n                    subTitle : e.target.subTitle.value,\n                    write : e.target.write.value,\n                    password : e.target.password.value,\n                });\n                history.push('/');\n            }}>\n                <div className=\"form\">\n                    <input \n                        type=\"txt\" \n                        value={title}\n                        className=\"input title\" name=\"title\"\n                        onChange={function(e){\n                            setTitle(e.target.value);\n                        }}\n                        required>\n                    </input>\n                </div>\n                <div className=\"form\">\n                    <input \n                        type=\"txt\"\n                        value={subTitle}\n                        className=\"input subTitle\" name=\"subTitle\"\n                        onChange={function(e){\n                            setSubTitle(e.target.value);\n                        }}\n                        required>   \n                    </input>\n                </div>\n                <div className=\"form\">\n                    <input \n                        type=\"txt\" \n                        value={writer}\n                        className=\"input writer\" name=\"writer\" \n                        onChange={function(e){\n                            setWriter(e.target.value);\n                        }}\n                        required>\n                    </input>\n                </div>\n                <div className=\"form\">\n                    <input \n                        value={\"Modified \"+year+\".\"+month+\".\"+date}\n                        className=\"input date\" name=\"date\" readOnly>\n                    </input>\n                </div>\n                <div className=\"form\">\n                    <textarea \n                        value={write}\n                        className=\"write\" name=\"write\" \n                        onChange={function(e){\n                            setWrite(e.target.value);\n                        }}\n                        required></textarea>\n                </div>\n                <div className=\"form\">\n                    <input \n                        type=\"password\"\n                        value={pwd}\n                        className=\"input password\" name=\"password\"\n                        onChange={function(e){\n                            setPwd(e.target.value);\n                        }}\n                        required></input>\n                </div>\n                <div className=\"form\">\n                    <input type=\"submit\" value=\"EDIT\" className=\"submitBtn\"></input>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default EditPage;","import React, {Component} from 'react';\nimport Header from './components/Header/Header';\nimport Board from './components/Main/Containers/Board'; \nimport Write from './components/Main/Write/Write';\nimport Intro from './components/Main/Read/Intro';\nimport Read from './components/Main/Read/Read';\nimport Footer from './components/Footer/Footer';\nimport Modal from 'react-modal';\nimport Edit from './components/Modal/Edit';\nimport Delete from './components/Modal/Delete';\nimport EditPage from './components/Main/Edit/Edit';\nimport {Switch, Route} from 'react-router-dom';\nimport store from './store';\nimport './App.css';\n\nModal.setAppElement('#root');\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      selectedList : 0,\n      contents : store.getState().list,\n      modalIsOpen : false,\n    }\n    store.subscribe(function(){\n      this.setState({selectedList : store.getState().selectedList});\n      this.setState({contents : store.getState().list})\n      this.setState({modalIsOpen : store.getState().modalIsOpen})\n    }.bind(this));\n  }\n  render(){\n    let editOrDelete=store.getState().editOrDelete;\n    let modalComp;\n    if(editOrDelete === \"EDIT\"){\n      modalComp=<Edit></Edit>\n    }else if(editOrDelete === \"DELETE\"){\n      modalComp=<Delete></Delete>\n    }\n\n    return(\n      <div className=\"App\">\n        <Header></Header>\n        <Switch className=\"Main\">\n          <Route exact path='/' component={Board}></Route>\n          <Route exact path='/write' component={Write}></Route>\n          <Route exact path='/intro' component={Intro}></Route>\n          <Route exact path={'/'+this.state.selectedList}>\n            <Read content={this.state.contents[this.state.selectedList]}></Read>\n          </Route>\n          <Route exact path='/edit'><EditPage id={this.state.selectedList} content={this.state.contents[this.state.selectedList]}></EditPage></Route>\n        </Switch>\n        <Footer></Footer>\n        <Modal \n          isOpen={this.state.modalIsOpen}\n          style={{\n            content :{\n              top: '30%',\n              left : '15%',\n              right : '15%',\n              bottom : '30%',\n              border : '1px solid silver',\n              borderRadius : '30px',\n            }\n          }}>\n          {modalComp}\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}